CompileFlags: # Tweak the parse settings
  # treat all files as C++, enable more warnings
  Add: [-Wall, -Wno-missing-prototypes, -I/deps/spdlog/include, -ferror-limit=0]
  Remove:
    [
      -member_function_call_bad_type*,
      -generate-code*,
      -expt-relaxed-constexpr*,
      drv_unsupported_opt,
      -forward-unknown-to-host-compiler,
      --diag-suppress,
      -Xcompiler*,
      -rdc*,
      --generate-code*,
    ]
  Compiler: g++ # Change argv[0] of compile flags to `clang++`
---
If: # Apply this config conditionally
  PathMatch: .*\.(cu|cuh)
CompileFlags:
  Add: [--cuda-gpu-arch=sm_86, -xcuda]
  Remove:
    # strip CUDA fatbin args
    - "-Xfatbin*"
    # strip CUDA arch flags
    - "-gencode*"
    - "--generate-code*"
    # strip CUDA flags unknown to clang
    - "-ccbin*"
    - "--compiler-options*"
    - "--expt-extended-lambda"
    - "--expt-relaxed-constexpr"
    - "-forward-unknown-to-host-compiler"
    - "-Werror=cross-execution-space-call"

---
Diagnostics:
  # Tweak Clang-Tidy checks.
  ClangTidy:
    Add:
      [
        performance*,
        modernize*,
        readability*,
        bugprone*,
        clang-analyzer*,
        concurrency*,
        cppcoreguidelines*,
      ]
    Remove:
      - modernize-avoid-c-arrays
      - modernize-raw-string-literal
      - modernize-use-trailing-return-type
      - modernize-use-trailing-return-type
      - cppcoreguidelines-avoid-magic-numbers
      - cppcoreguidelines-pro-bounds-constant-array-index
      - cppcoreguidelines-pro-type-cstyle-cast
      - cppcoreguidelines-pro-bounds-pointer-arithmetic
      - readability-uppercase-literal-suffix
      - readability-isolate-declaration
      - readability-magic-numbers
      - readability-function-cognitive-complexity
      - readability-math-missing-parentheses
      - readability-identifier-naming
      - readability-uppercase-literal-suffix
      - readability-isolate-declaration
      - readability-magic-numbers
      # 0 means false, any set bit means true; embrace this
      - readability-implicit-bool-conversion
      # single character names are valid in small scopes
      - readability-identifier-length
      - bugprone-easily-swappable-parameters
      - cppcoreguidelines-non-private-member-variables-in-classes
      - cppcoreguidelines-pro-type-union-access
      - cppcoreguidelines-pro-bounds-array-to-pointer-decay
      - cppcoreguidelines-avoid-c-arrays

    CheckOptions:
      readability-identifier-naming.VariableCase: lower_case
      readability-identifier-length.MinimumVariableNameLength: 1
      readability-identifier-length.MinimumParameterNameLength: 1
